/*
            JOIN
            :    두개 이상의 테이블에서 데이터를 조회하고자 할 때 사용되는 구문
                  조회 결과는 하나의 결과물(RESULT SET)로 나옴
                  
            * 관계형 데이터베이스(RDB)에서는 최소한의 데이터를 각각의 테이블에 저장
                중복 저장을 최소화하기 위해 최대한 쪼개서 관리함
                
            => 관계형 데이터베이스에서 쿼리문을 이용한 테이블간의 "관계"를 맺는 방법
            (각 테이블간의 연결고리(외래키)를 통해서 데이터를 매칭시켜 조회함!)
            
            JOIN은 크게 "오라클 전용 구문"과 "ANSI 구문" (미국국립표준협회)
            
                        오라클 전용 구문                          |               ANSI 구문
        -------------------------------------------------------------
                        등가 조인                                        |                 내부 조인
                    (EQUAL JOIN)                                |               (INNER JOIN)    --> JOIN USING / ON
        -------------------------------------------------------------
                        포괄 조인                                        |                 왼쪽 외부 조인 (LEFT OUTER JOIN)
                    (LEFT OUTER)                                |                 오른쪽 외부 조인 (RIGHT OUTER JOIN)
                    (RIGHT OUTER)                            |                 전체 외부 조인 ( FULL OUTER JOIN)
         ------------------------------------------------------------
                자체 조인 (SELF JOIN)                    |                      JOIN ON
                비등가 조인(NON EQUAL JOIN) |
         ------------------------------------------------------------     
*/
-- 전체 사원들의 사번, 사원명, 부서코드


-- 부서코드, 부서명 조회 (부서 정보가 저장된 테이블: DEPARTMENT)


-- 전체 사원들의 사번, 사원명, 직급코드 조회


-- 직급코드, 직급명 조회 (직급 정보: JOB)


/*
            * 등가조인(EQUAL JOIN)  /   내부조인(INNER JOIN)
            => 연결시키는 컬럼의 값이 일치하는 행들만 조회(=> 일치하지 않는 값은 조회 시 제외)
*/
-- 오라클 전용 구문 --
/*
            * FROM 절에 조회하고자 하는 테이블을 나열(,로 구분)
            * WHERE절에 매칭시킬 컬럼에 대한 조건을 작성
*/
-- 사원의 사번, 이름, 부서명을 조회 (부서코드 컬럼 => EMPLOYEE: DEPT_CODE, DEPARTMENT: DEPT_ID)


--=> NULL(EMPLOYEE, DEPT_CODE), 마케팅부(D3), 해외영업3부(D7), 국내영업부(D4) -> DEPARTMENT 데이터는 제외됨!
-- 각 테이블에만 존재하는 값들로 조회에서 제외됨

-- 사원의 사번, 이름, 직급명을 조회 (직급코드 컬럼=> EMPLOYEE: JOB_CODE, JOB: JOB_CODE)
-- 두 테이블의 컬럼명이 동일할 경우 별칭을 지어줌으로써 구분할 수 있음!



-- ANSI 구문 --
/*
            FROM절에 기준이되는 테이블을 하나 작성
            JOIN절에 조인하고자하는 테이블을 기술 + 매칭시키고자 하는 조건을 작성
            - JOIN USING       : 컬럼명이 같은 경우
            - JOIN ON               : 컬럼명이 같거나 다른 경우
*/
-- 사번, 사원명, 부서명 조회 (EMPLOYEE: DEPT_CODE, DEPARTMENT: DEPT_ID)

    
-- 사번, 사원명, 직급명 조회 (EMPLOYEE: JOB_CODE, JOB: JOB_CODE)
-- JOIN USING 구문 사용

    
-- JOIN ON 구문 사용


-- 대리 직급인 사원의 사번, 사번명, 직급명, 급여 조회
-- 오라클 구문 사용**


-- ** ANSI 구문 사용 **

---------------------------------------------------QUIZ--------------------------
-- [1] 부서가 인사관리부인 사원들의 사번, 사원명, 보너스 조회
-- ** 오라클 구문 **


-- ** ANSI 구문 **



-- [2] 부서(DEPARTMENT) 와 지역(LOCATION) 정보를 참고하여
--          전체 부서의 부서코드, 부서명, 지역코드, 지역명 조회
-- ** 오라클 구문 **


-- ** ANSI 구문 **


-- [3] 보너스를 받는 사원들의 사번, 사원명, 보너스, 부서명 조회
-- ** 오라클 구문 **

-- ** ANSI 구문 **



-- [4] 부서가 총무부가 아닌 사원들의 사원명, 급여 조회
-- ** 오라클 구문 **


-- ** ANSI 구문 **

-------------------------------------------------------------------------------
/*
            포괄조인 / 외부조인 (OUTER JOIN)
            : 두 테이블 간의 JOIN 시 일치하지 않는 행도 포함하여 조회하는 구문
              단, 반드시 LEFT/RIGHT를 지정해야함 (기준이 되는 테이블)
*/
-- 모든 사원명, 부서명, 급여, 연봉 정보를 조회
-- * LEFT JOIN : 두 테이블 중 왼쪽에 작성된 테이블을 기준으로 조인

-- ** 오라클 구문 **


-- ** ANSI 구문 **


-- * RIGHT JOIN : 두 테이블 중 오른쪽에 작성된 기준으로 조인
-- ** 오라클 구문 **
 

-- ** ANSI 구문 **


-- * FULL JOIN : 두 테이블이 가진 모든 행을 조회하는 조인구문 (오라클 전용구문  X)
-- ** ANSI 구문 **
